version: "3.8"
name: java
services:
    postgres:
        image: postgres
        container_name: postgres
        restart: always
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=database
        volumes:
          - ~/volumes/postgres:/var/lib/postgresql/data
    postgres-ui:
        image: dpage/pgadmin4
        container_name: postgres-ui
        restart: always
        depends_on:
            - postgres
        ports:
            - "5433:80"
        environment:
            - PGADMIN_CONFIG_SERVER_MODE=False
            - PGADMIN_CONFIG_LOGIN_REQUIRED=False
            - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
            - PGADMIN_DEFAULT_EMAIL=admin@mail.com
            - PGADMIN_DEFAULT_PASSWORD=password
        volumes:
            - ~/volumes/postgres-ui:/var/lib/pgadmin
    mongo:
        image: mongo
        container_name: mongo
        restart: always
        ports:
            - "27017:27017"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=admin
            - MONGO_INITDB_ROOT_PASSWORD=password
        volumes:
            - ~/volumes/mongo:/data/db
    mongo-ui:
        image: mongo-express
        container_name: mongo-ui
        restart: always
        depends_on:
            - mongo
        ports:
            - "27018:8081"
        environment:
            - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongo:27017
            - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
            - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
            - ME_CONFIG_MONGODB_AUTH_USERNAME=admin
            - ME_CONFIG_MONGODB_AUTH_PASSWORD=password
            - ME_CONFIG_BASICAUTH_USERNAME=admin
            - ME_CONFIG_BASICAUTH_PASSWORD=password
    localstack:
        image: localstack/localstack
        container_name: localstack
        restart: always
        ports:
            - "4566:4566"
        environment:
            - SERVICES=sqs,sqs-query,s3
        volumes:
            - ./localstack.sh:/etc/localstack/init/ready.d/localstack.sh
    prometheus:
        image: prom/prometheus
        container_name: prometheus
        restart: always
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - ~/volumes/prometheus:/prometheus
    promtail:
        image: grafana/promtail
        container_name: promtail
        restart: always
        volumes:
            - ./promtail.yml:/etc/promtail/config.yml
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/lib/docker/containers:/var/lib/docker/containers
    loki:
        image: grafana/loki
        container_name: loki
        restart: always
        depends_on:
            - promtail
        ports:
            - "3100:3100"
        volumes:
            - ~/volumes/loki:/loki
    grafana:
        image: grafana/grafana
        container_name: grafana
        restart: always
        depends_on:
            - prometheus
            - loki
        ports:
            - "3000:3000"
        environment:
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch traceQLStreaming correlations metricsSummary traceqlEditor
        volumes:
            - ~/volumes/grafana/dashboards:/etc/grafana/provisioning/dashboards
            - ./grafana.yml:/etc/grafana/provisioning/datasources/grafana-datasources.yml
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
        container_name: elasticsearch
        restart: always
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
            - xpack.security.enrollment.enabled=false
    logstash:
        image: docker.elastic.co/logstash/logstash:8.11.3
        container_name: logstash
        restart: always
        depends_on:
            - elasticsearch
        ports:
            - "5044:5044"
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
        volumes:
            - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    kibana:
        image: docker.elastic.co/kibana/kibana:8.11.3
        container_name: kibana
        restart: always
        depends_on:
            - elasticsearch
        ports:
            - "5601:5601"
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200